<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="productMapper">
	
	<resultMap type="category" id="categoryResultSet">
		<result column="CATE_NO" property="cateNo"/>
		<result column="CATE_NAME" property="cateName"/>
		
	
	</resultMap>
		<!-- product ResultMap -->
<resultMap type="product" id="productResultSet">
		<result column="PRO_NO" property="proNo"/>
		<result column="PRO_TITLE" property="proTitle"/>
		<result column="PRO_CONTENT" property="proContent"/>
		<result column="SELL_ID" property="sellId"/>
		<result column="PRO_PRICE" property="proPrice"/>
		<result column="WISH_PRICE" property="wishPrice"/>
		<result column="POST_PRICE" property="postPrice"/>
		<result column="BID_PRICE" property="curPrice"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="PRO_CATE_NO" property="proCateNo"/>
		<result column="TRADE_CATE_NO" property="tradeCateNo"/>
		<result column="TRADE_LOCATION" property="tradeLocation"/>
		<result column="COUNT" property="count"/>
		<result column="BIDCOUNT" property="bidCount"/>
		<result column="PATH" property="path"/>
		<result column="PRO_STATUS" property="proStatus"/>

	</resultMap>
	
	<resultMap type="postbox" id="PostboxResultSet">
		<result column="PBOX_NO" property="pboxNo"/>
		<result column="PBOX_NAME" property="pboxName"/>
		<result column="PRO_NO" property="proNo"/>
		<result column="PRO_CATE_NO" property="proCateNo"/>
		<result column="PRO_TITLE" property="proTitle"/>
	</resultMap>
	
	<resultMap type="bid" id="BidResultSet">
		<result column="BID_NO" property="bidNo"/>
		<result column="BUYER_ID" property="buyerId"/>
		<result column="PRO_NO" property="proNo"/>
		<result column="BID_PRICE" property="bidPrice"/>
		<result column="BID_STATUS" property="bidStatus"/>
		<result column="PRO_CATE_NO" property="proCateNo"/>
		<result column="PRO_TITLE" property="proTitle"/>
	</resultMap>
		<resultMap type="productImages" id="proImgResultSet">
		<result column="IMAGE_NO" property="imageNo"/>
		<result column="PRO_NO" property="proNo"/>
		<result column="ORINAME" property="oriName"/>
		<result column="SYSNAME" property="sysName"/>
		<result column="PATH" property="path"/>
		<result column="IMG_STATUS" property="imgStatus"/>
	
	</resultMap>
		<select id="selectProductList" resultMap="productResultSet">
		
		SELECT P.PRO_NO
			  ,PRO_TITLE
			  ,PRO_CONTENT
			  ,SELL_ID
			  ,PRO_PRICE
			  ,WISH_PRICE
			  ,POST_PRICE
              ,BID_PRICE
			  ,START_DATE
			  ,END_DATE
			  ,PRO_CATE_NO
			  ,TRADE_CATE_NO
			  ,TRADE_LOCATION
			  ,COUNT
              ,BIDCOUNT
              ,PATH
	FROM PRODUCT P
    , (SELECT PRO_NO, BID_PRICE FROM BID WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)) B
    , (SELECT PRO_NO,COUNT(*) AS BIDCOUNT FROM BID GROUP BY PRO_NO) C
    , (SELECT D.RNUMS,PRO_NO,PATH FROM (SELECT ROW_NUMBER() OVER(PARTITION BY PI.PRO_NO ORDER BY IMAGE_NO DESC ) AS RNUMS, PI.*
        FROM PRODUCT_IMAGES PI) D 
        WHERE D.RNUMS=1)E
    WHERE P.PRO_NO = B.PRO_NO(+) 
    AND P.PRO_NO = C.PRO_NO(+)
    AND P.PRO_NO = E.PRO_NO(+)
    AND P.PRO_STATUS ='Y'
    ORDER BY PRO_NO DESC
	</select>
	
	
	<select id="selectCategoryList" resultMap="categoryResultSet" parameterType="int">
		SELECT CATE_NO, CATE_NAME 
		FROM CATEGORY
		WHERE TRUNC(CATE_NO,-2) =#{cateNo}
		AND NOT CATE_NO= #{cateNo}
	</select>
	<select id="selectProduct" resultMap="productResultSet">
		SELECT P.PRO_NO
			  ,PRO_TITLE
			  ,PRO_CONTENT
			  ,SELL_ID
			  ,PRO_PRICE
			  ,WISH_PRICE
			  ,POST_PRICE
              ,BID_PRICE
			  ,START_DATE
			  ,END_DATE
			  ,PRO_CATE_NO
			  ,TRADE_CATE_NO
			  ,TRADE_LOCATION
			  ,COUNT
              ,BIDCOUNT
              ,path
	FROM PRODUCT P
    , (SELECT PRO_NO, BID_PRICE FROM BID WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)) B
    , (SELECT PRO_NO,COUNT(*) AS BIDCOUNT FROM BID GROUP BY PRO_NO) C
    , (SELECT D.RNUMS,PRO_NO,PATH FROM (SELECT ROW_NUMBER() OVER(PARTITION BY PI.PRO_NO ORDER BY IMAGE_NO DESC ) AS RNUMS, PI.*
        FROM PRODUCT_IMAGES PI) D 
        WHERE D.RNUMS=1)E

    WHERE P.PRO_NO = B.PRO_NO(+) 
    AND P.PRO_NO = C.PRO_NO(+)
    AND P.PRO_NO = E.PRO_NO(+)
    AND P.PRO_STATUS ='Y'
	AND P.PRO_NO =#{pNo}
	</select>
	<select id="selectImgList" resultMap="proImgResultSet">
		SELECT IMAGE_NO, PRO_NO, ORINAME, SYSNAME, PATH
		FROM PRODUCT_IMAGES
		WHERE PRO_NO =#{pNo}
		
				
	</select>
	<select id="selectProListCount" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE PRO_STATUS='Y'
	
	</select>
	<insert id="insertProduct" parameterType="product">
		
		INSERT INTO PRODUCT(
                    PRO_NO
                    ,PRO_TITLE
                    ,PRO_CONTENT
                    ,SELL_ID
                    ,PRO_PRICE
                    ,WISH_PRICE
                    ,POST_PRICE
                    ,START_DATE
                    ,END_DATE
                    ,PRO_CATE_NO
                    ,TRADE_CATE_NO
                    ,TRADE_LOCATION
                    )
            VALUES(
                    SEQ_PRNO.NEXTVAL
                    ,#{proTitle}
                    ,#{proContent}
                    ,#{sellId}
                    ,#{proPrice}
                    ,#{wishPrice}
                    ,#{postPrice}
                    ,SYSDATE
 					,SYSDATE+#{bidDate}
                    ,#{proCateNo}
                    ,#{tradeCateNo}
                    ,#{tradeLocation}
                  )
	
	</insert>

	<insert id="insertProductImages">
		insert into PRODUCT_IMAGES(
									IMAGE_NO
									,PRO_NO
									,ORINAME
									,SYSNAME
									,PATH
									)
		SELECT SEQ_IMGNO.NEXTVAL,SEQ_PRNO.CURRVAL, A.* from(
		<foreach item="item" collection="list" separator="UNION ALL ">
			select #{item.oriName} as ORINAME,
			#{item.sysName} as SYSNAME,
			#{item.path} as PATH
			from dual
		</foreach>
		) A
	</insert>
	<insert id="insertBid">
		INSERT INTO BID(
						BID_NO
						,BUYER_ID
						,PRO_NO
						,BID_PRICE
						)
					VALUES(
					SEQ_BINO.NEXTVAL
					,#{buyerId}
					,#{proNo}
					,#{bidPrice}
					)
	
	</insert>
	<select id="selectBidPrice" resultType="int">
		SELECT BID_PRICE 
		FROM BID 
		WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)
		AND PRO_NO =#{proNo}
	</select>
	<select id="selectProNo" resultType="int">
		SELECT A.*
		FROM (SELECT MAX(PRO_NO) FROM PRODUCT
		WHERE SELL_ID =#{sellId})A
	
	</select>
	<update id="increaseCount">
		UPDATE PRODUCT
		SET COUNT = COUNT +1
		WHERE PRO_STATUS ='Y'
		AND PRO_NO =#{pNo}
	</update>
	<update id="buyImmediately">
		UPDATE PRODUCT
		SET PRO_STATUS ='N'
		WHERE PRO_NO=#{proNo}
	</update>
	<update id="endSell">
		UPDATE PRODUCT
		SET PRO_STATUS='N'
		WHERE PRO_NO=#{proNo}
		
	
	</update>
	<delete id="deleteProduct">
		DELETE FROM PRODUCT
		WHERE PRO_NO=#{proNo}
	</delete>
	<delete id="deleteProImg">
		DELETE FROM PRODUCT_IMAGES
		WHERE PRO_NO=#{proNo}
	</delete>

	
	<!--
	DML 구문일때는 결과값이 항상 int이기때문에 resultType을 적지 않아도 되지만
	select구문일때는 타입이 특정되지 않기 때문에 적어야한다.
 -->
 
	<select id="productEnrollAmount" resultType="_int">
		SELECT COUNT(START_DATE) AS COUNT
		FROM PRODUCT
		WHERE START_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
	</select>
	
	<select id="productTradeAmount" resultType="_int">
	    SELECT COUNT(PRO_NO) AS COUNT FROM 
        (SELECT DISTINCT(P.PRO_NO)
		FROM PRODUCT P
        JOIN BID B
        ON P.PRO_NO = B.PRO_NO
		WHERE END_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
		AND PRO_STATUS = 'N'
        AND BID_STATUS = 'Y') A
	</select>
	
	<select id="productEnrollMoney" resultType="_int">
        SELECT SUM(PRO_PRICE) AS SUM
		FROM PRODUCT
		WHERE START_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
	</select>
	

	<select id="productTradeMoney" resultType="_int">
        SELECT SUM(BID_PRICE) AS SUM
		FROM PRODUCT P
        JOIN BID B
        ON P.PRO_NO = B.PRO_NO
		WHERE END_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
		AND PRO_STATUS = 'N'
        AND BID_STATUS = 'Y'
        AND BID_NO IN(SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO) 
	</select>
	
	
	<select id="selectListCount" resultType="_int" >
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE PRO_STATUS='Y'
		AND SELL_ID = 'admin'
	</select>
	
	<select id="selectListCountt" resultType="_int">
		SELECT COUNT(*)
		FROM POSTBOX
		JOIN PRODUCT USING (PRO_NO)
		WHERE PRO_STATUS='Y'
		AND SELL_ID = 'admin'
	</select>
	
	<select id="selectList" resultMap="productResultSet">
		SELECT PRO_NO,PRO_TITLE,PRO_PRICE,COUNT,PRO_STATUS
		FROM PRODUCT
		WHERE SELL_ID= 'admin' <!-- ${buyId} -->
	</select>
	
	<insert id="postInsert" parameterType="Postbox">
		INSERT INTO POSTBOX(PBOX_NO,PBOX_NAME,PRO_NO) VALUES(#{pboxNo},#{pboxName},#{proNo})
	</insert>
	
	
	
	
	<select id="selectListPost" resultMap="PostboxResultSet">
		SELECT PRO_TITLE,PBOX_NAME,PBOX_NO
		FROM POSTBOX 
		JOIN PRODUCT USING (PRO_NO)
		WHERE SELL_ID= 'admin'
	</select>
	
	
	
	
	<select id="selectListAttend" resultMap="BidResultSet">
		SELECT BUYER_ID,PRO_TITLE,BID_PRICE,BID_STATUS
		FROM BID B
		JOIN PRODUCT USING (PRO_NO)
		WHERE BUYER_ID = 'admin'
	</select>
	
	<select id="selectListBid" resultMap="BidResultSet"> 
		SELECT PRO_TITLE,BID_PRICE
		FROM BID B
		JOIN PRODUCT USING (PRO_NO)
		WHERE BID_STATUS = 'N'
	</select>
		<select id="selectNewMember" resultType="_int">
		SELECT COUNT(ENTER_DATE) AS COUNT
		FROM MEMBER
		WHERE ENTER_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
	</select>
	
	<select id="selectRemoveMember" resultType="_int">		
		SELECT COUNT(MODIFY_DATE) AS COUNT
		FROM MEMBER
		WHERE MODIFY_DATE BETWEEN TO_DATE(#{date1},'YY-MM-DD')
		AND TO_DATE(#{date2},'YY-MM-DD')
		AND USER_STATUS = 'N'
	</select>
	


	<!-- 검색 조건 (option&keyword) -->
	<sql id="search">
		<choose>
			<when test="searchType !=null and searchType.equals('proTitle')">
				and PRO_TITLE LIKE '%'|| #{searchKeyword} ||'%'
			</when>
			<when test="searchType !=null and searchType.equals('proContent')">
				and PRO_CONTENT LIKE '%'|| #{searchKeyword} ||'%'
			</when>
			<when test="searchType !=null and searchType.equals('sellId')">
				and SELL_ID LIKE '%'|| #{searchKeyword} ||'%'
			</when>
		</choose>
	</sql>
	
	
	<!-- product 검색 -->
	<select id="getSearchList" resultMap="productResultSet">
		SELECT P.PRO_NO
				  ,PRO_TITLE
				  ,PRO_CONTENT
				  ,SELL_ID
				  ,PRO_PRICE
				  ,WISH_PRICE
				  ,POST_PRICE
	              ,BID_PRICE
				  ,START_DATE
				  ,END_DATE
				  ,PRO_CATE_NO
				  ,TRADE_CATE_NO
				  ,TRADE_LOCATION
				  ,COUNT
	              ,BIDCOUNT
		FROM PRODUCT P
	    , (SELECT PRO_NO, BID_PRICE FROM BID WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)) B
	    , (SELECT PRO_NO,COUNT(*) AS BIDCOUNT FROM BID GROUP BY PRO_NO) C
	    WHERE P.PRO_NO = B.PRO_NO(+) 
	    AND P.PRO_NO = C.PRO_NO(+)
	    AND P.PRO_STATUS ='Y'
		<include refid="search"/>
		ORDER BY PRO_NO DESC
	</select>
	
	<!-- 게시글 레코드 갯수 -->
	<select id="searchProListCount" resultType="int">
		SELECT COUNT(*) 
		FROM PRODUCT
		where PRO_STATUS ='Y'
		<include refid="search"/>
	</select>
	
	
	<!-- 정렬_필터 조건 -->
	<sql id="sort">
		<if test="sort == 'null'"> <!-- 최신순 (값이 없을 때 proNo가 제대로 들어감) -->
			ORDER BY PRO_NO DESC
		</if>
		<if test="sort == 'proNo'"> <!-- 마감임박순 -->
			ORDER BY PRO_NO ASC
		</if>
		
		<if test="sort == 'hPrice'"> <!-- 높은가격순 -->
			ORDER BY BID_PRICE DESC
		</if>
		<if test="sort == 'rPrice'"> <!-- 낮은가격순 -->
			ORDER BY BID_PRICE ASC
		</if>
		<if test="sort == 'count'"> <!-- 조회수 -->
			ORDER BY COUNT DESC
		</if>
	</sql>
	
	
	
	<!-- 필터링_정렬 (with 검색) -->
	<select id="filterList"  resultMap="productResultSet">
		SELECT P.PRO_NO
				  ,PRO_TITLE
				  ,PRO_CONTENT
				  ,SELL_ID
				  ,PRO_PRICE
				  ,WISH_PRICE
				  ,POST_PRICE
	              ,BID_PRICE
				  ,START_DATE
				  ,END_DATE
				  ,PRO_CATE_NO
				  ,TRADE_CATE_NO
				  ,TRADE_LOCATION
				  ,COUNT
	              ,BIDCOUNT
		FROM PRODUCT P
	    , (SELECT PRO_NO, BID_PRICE FROM BID WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)) B
	    , (SELECT PRO_NO,COUNT(*) AS BIDCOUNT FROM BID GROUP BY PRO_NO) C
	    WHERE P.PRO_NO = B.PRO_NO(+) 
	    AND P.PRO_NO = C.PRO_NO(+)
	    AND P.PRO_STATUS ='Y'
	    <include refid="search"/>
		<include refid="sort" />
	</select>
    
    <!-- 필터링_정렬 (without 검색) -->
	<select id="filterListNoS"  resultMap="productResultSet">
		SELECT P.PRO_NO
				  ,PRO_TITLE
				  ,PRO_CONTENT
				  ,SELL_ID
				  ,PRO_PRICE
				  ,WISH_PRICE
				  ,POST_PRICE
	              ,BID_PRICE
				  ,START_DATE
				  ,END_DATE
				  ,PRO_CATE_NO
				  ,TRADE_CATE_NO
				  ,TRADE_LOCATION
				  ,COUNT
	              ,BIDCOUNT
		FROM PRODUCT P
	    , (SELECT PRO_NO, BID_PRICE FROM BID WHERE BID_NO IN (SELECT MAX(BID_NO) FROM BID GROUP BY PRO_NO)) B
	    , (SELECT PRO_NO,COUNT(*) AS BIDCOUNT FROM BID GROUP BY PRO_NO) C
	    WHERE P.PRO_NO = B.PRO_NO(+) 
	    AND P.PRO_NO = C.PRO_NO(+)
	    AND P.PRO_STATUS ='Y'
		<include refid="sort" />
	</select>
    
	

	
</mapper>
